from openai import OpenAI
import json

def enrich_with_ai():
    try:
        # Charger les infos de l'h√¥te
        with open("data/resultat.json", "r") as f:
            host_info = json.load(f)["Host Information"]
        mac = host_info.get("mac", "inconnu")
        ip = host_info.get("ip", "inconnu")
        hostname = host_info.get("hostname", "inconnu")
        username = host_info.get("username", "inconnu")

        # Charger les domaines DNS s'ils existent
        dns_domains_summary = "Aucun domaine suspect d√©tect√©."
        try:
            import pandas as pd
            dns_df = pd.read_csv("data/deep_enriched.csv")
            dns_domains = dns_df["domain"].unique().tolist()[:10]
            dns_domains_summary = "\n".join(dns_domains)
        except:
            pass

        # üëâ ICI on construit le prompt
        PROMPT_AI = f"""
Voici les informations extraites d'une analyse r√©seau :
- Adresse MAC : {mac}
- Adresse IP : {ip}
- Nom de l'h√¥te : {hostname}
- Nom d'utilisateur : {username}

Voici √©galement une liste de domaines DNS suspects d√©tect√©s (si disponibles) :
{dns_domains_summary}

G√©n√®re un r√©sum√© de l‚Äôactivit√© r√©seau de cette machine, en expliquant :
1. Ce que ces informations r√©v√®lent sur la machine
2. Si un comportement malveillant peut √™tre d√©duit
3. Quels √©l√©ments doivent √™tre surveill√©s
4. Une recommandation pour un administrateur r√©seau

Sois concis mais pr√©cis.
"""

        # Appel √† Mistral
        client = OpenAI(
            base_url="https://api.scaleway.ai/ac596d48-8004-4950-be23-dca49fca778f/v1",
            api_key="695f4799-c556-476c-9f04-25b7b192b4cd"
        )

        response = client.chat.completions.create(
            model="mistral-nemo-instruct-2407",
            messages=[
                {"role": "system", "content": "Tu es un assistant expert en cybers√©curit√©."},
                {"role": "user", "content": PROMPT_AI}
            ],
            max_tokens=512,
            temperature=0.3
        )

        result_text = response.choices[0].message.content

        with open("data/enriched.txt", "w", encoding="utf-8") as f:
            f.write(result_text)

        print("üß† R√©sum√© IA enregistr√© dans data/enriched.txt")

    except Exception as e:
        print(f"‚ö†Ô∏è Erreur enrichissement IA : {e}")
